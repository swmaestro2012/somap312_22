package com.softwaremaestro.Indoornavigation.Util;

import java.util.ArrayList;

import kr.softwaremaestro.indoor.wrm.vo.Point;
import kr.softwaremaestro.indoor.wrm.vo.Waypoint;
import kr.softwaremaestro.indoor.wrm.vo.WaypointLink;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.widget.ImageView;

public class MyLocationOverlayView extends ImageView {

	Point myLocation;
	Point Destination;
	Point nullPoint;
	ArrayList<Waypoint> WaypointList;
	ArrayList<WaypointLink> WaypointLinkList;
	int zOrder;
	float scale;

	public void setScale(int[] info) {
		this.scale = (float)info[2]/(float)info[0];
	}
	
	public void setScale(float d) {
		this.scale = d;
	}

	public void setzOrder(int zOrder) {
		this.zOrder = zOrder;
	}

	public void setMyLocation(Point myLocation) {
		this.myLocation = myLocation;
	}

	public MyLocationOverlayView(Context context) {
		this(context, null);
	}

	public MyLocationOverlayView(Context context, int height, int width) {
		this(context, null);
	}

	public MyLocationOverlayView(Context context, AttributeSet attrs) {
		super(context, attrs);
		setNullMyLocation();
		setNullDestination();
		nullPoint= new Point(-1, 0.0, 0.0, 0.0);
		WaypointList = new ArrayList<Waypoint>();
		WaypointLinkList = new ArrayList<WaypointLink>();
		setBackgroundColor(Color.TRANSPARENT);
		setScaleType(ScaleType.MATRIX);
	}

	public void setNullDestination() {
		Destination = new Point(-1, 0.0, 0.0, 0.0);
	}

	public void setNullMyLocation() {
		myLocation = new Point(-1, 0.0, 0.0, 0.0);
	}
	

	@Override
	public void setImageBitmap(Bitmap bm) {
		super.setImageBitmap(bm);
	}

	@Override
	protected void onLayout(boolean changed, int left, int top, int right,
			int bottom) {
		super.onLayout(changed, left, top, right, bottom);
		
	}

	public void onDraw(Canvas c) {
		super.onDraw(c);
		float[] value = new float[9];
		getImageMatrix().getValues(value);
		Paint paint = new Paint();
		paint.setAntiAlias(true);
		paint.setColor(Color.RED);
		paint.setAlpha(100);
		c.drawCircle((float) (value[2] + 1000 * value[0]*scale),
				(float) (value[5] + 1000 * value[0]*scale),
				14 * value[0], paint);
		if(!myLocation.equals(nullPoint)&&zOrder==myLocation.getZ().intValue())
		c.drawCircle((float) (value[2] + myLocation.getX() * value[0]*scale),
				(float) (value[5] + myLocation.getY() * value[0]*scale),
				14 * value[0], paint);
		paint.setColor(Color.BLUE);
		paint.setAlpha(100);
		if(!Destination.equals(nullPoint)&&zOrder==Destination.getZ().intValue())
		c.drawCircle((float) (value[2] + Destination.getX() * value[0]*scale),
				(float) (value[5] + Destination.getY() * value[0]*scale),
				14 * value[0], paint);
	}
	
	public void setWaypointList(ArrayList<Waypoint> waypointList) {
		WaypointList = waypointList;
	}

	public ArrayList<WaypointLink> getWaypointLinkList() {
		return WaypointLinkList;
	}

	public void setWaypointLinkList(ArrayList<WaypointLink> waypointLinkList) {
		WaypointLinkList = waypointLinkList;
	}

}